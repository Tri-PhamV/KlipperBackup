[neopixel TradRack]
pin: ercf:gpio21
chain_count: 6
color_order: GRB
initial_RED: 0.0
initial_GREEN: 0.0
initial_BLUE: 0.0



#########welcome


[delayed_gcode led_startup]
initial_duration: 2
gcode:
  tr_led_welcome


[delayed_gcode sw_land_led]
gcode:
  STOP_LED_EFFECTS LEDS="neopixel:TradRack"
  led_status
  

[gcode_macro tr_led_welcome]
gcode:
  STOP_LED_EFFECTS LEDS="neopixel:TradRack"
  SET_LED_EFFECT EFFECT=mmu_curtain
  UPDATE_DELAYED_GCODE ID=sw_land_led DURATION=10
###########


[gcode_macro START_TR]
description: "Đặt màu sắc cho LED"
gcode:
    {% set D_COLORS = "FFFFFF,FFFFFF,FFFFFF,FFFFFF,FFFFFF,FFFFFF" %}
    {% set TOOL_COLORS = params.TOOL_COLORS|default(D_COLORS)|string %}
    #SAVE_VARIABLE VARIABLE="tr_colors" VALUE="{TOOL_COLORS | pprint}"
    {action_respond_info("Save colors: " ~ TOOL_COLORS)}
    STOP_LED_EFFECTS LEDS="neopixel:TradRack"
    SET_LED_EFFECT EFFECT=mmu_curtain


    
[gcode_macro led_status]
description: "Đặt màu sắc cho LED"
gcode:
    STOP_LED_EFFECTS LEDS="neopixel:TradRack"
    {action_respond_info("STOPPED LED EFFECTS")}
    
    {% set led_t = printer.save_variables.variables['tr_active_lane'] %}
    {% set get_colors = printer.save_variables.variables['tr_colors'] %}
    
    {% if get_colors is none %}
        {% set tool_colors = "FFFFFF,FFFFFF,FFFFFF,FFFFFF,FFFFFF,FFFFFF" %}
    {% else %}
        {% set tool_colors = get_colors %}
    {% endif %}


    
    # {% set printer.save_variables.variables['tool_colors'] = tool_colors %}
    # SAVE_VARIABLE VARIABLE="my_saved_variable" VALUE="{my_object | pprint | replace("\n", "") | replace("\"", "\\\"")}"
    
    # {action_respond_info("Tool Colors Raw: " ~ tool_colors_raw)}

    {% for hex_color in tool_colors.split(',') %}
        # {action_respond_info("hex_color: " ~ hex_color|string)}
        {% set r = (hex_color[0:2] | string | lower | int(base=16)) / 255.0 %}
        {% set g = (hex_color[2:4] | string | lower | int(base=16)) / 255.0 %}
        {% set b = (hex_color[4:6] | string | lower | int(base=16)) / 255.0 %}
        {% set rgb = (r, g, b) %}
        
        # Hiển thị giá trị RGB để kiểm tra
        # {action_respond_info("rgb: " ~ r|string ~ ", " ~ g|string ~ ", " ~ b|string)}

        # Điều khiển LED với màu sắc đã tính toán
        {% if led_t == None %}
            SET_LED LED=TradRack INDEX={ loop.index  } RED=0.1 GREEN=0.1 BLUE=0.1
        {% else %}
            {% if loop.index == led_t + 1 %}
                SET_LED LED=TradRack INDEX={ loop.index  } RED=0 GREEN=0.3 BLUE=0
            {% else %}
                SET_LED LED=TradRack INDEX={ loop.index  } RED=0.1 GREEN=0.1 BLUE=0.1
            {% endif %}
        {% endif %}
    {% endfor %}





    
    #     {% set tool_colors = tool_colors ~ rgb %}
    # {% endfor %}
    # {action_respond_info("Converted Tool Colors (after loop): " + tool_colors|string)}

    # # Kiểm tra xem danh sách tool_colors có đủ phần tử không
    # {% if tool_colors|length < 6 %}
    #     # Nếu không đủ màu sắc, thay thế bằng màu trắng
    #     {% set tool_colors = [(1.0, 1.0, 1.0)] * 6 %}
    #     {action_respond_info("Not enough colors, replaced with white: " + tool_colors|string)}
    # {% else %}
    #     {action_respond_info("Enough colors provided: " + tool_colors|string)}
    # {% endif %}

    # {% set led_t = printer.save_variables.variables['tr_active_lane'] %}
    # {action_respond_info("Active Lane: " + led_t|string)}

    # # Áp dụng màu sắc cho LED
    # {% for i in range(1, 7) %}
    #     {% set color = tool_colors[i - 1] %}
    #     {% if i == led_t + 1 %}
    #         # Giữ nguyên độ sáng cho LED_T
    #         SET_LED LED=TradRack INDEX={i} RED={color[0]} GREEN={color[1]} BLUE={color[2]}
    #         {action_respond_info("Set LED {i} to full brightness with color: " + color|string)}
    #     {% else %}
    #         # Giảm độ sáng còn 20% cho các LED khác
    #         SET_LED LED=TradRack INDEX={i} RED={color[0] * 0.2} GREEN={color[1] * 0.2} BLUE={color[2] * 0.2}
    #         {action_respond_info("Set LED {i} to 20% brightness with color: " + color|string)}
    #     {% endif %}
    # {% endfor %}




    
[led_effect land_choose]
autostart: false
recalculate: true
leds:
    neopixel:TradRack
layers:
    blink {params.DURATION|default(1)|float} {params.CYCLE|default(0.5)|float} top (1.0, 0.0, 0.0)

[led_effect track_load]
autostart: false
frame_rate:24
leds:
   neopixel:TradRack
layers:
    comet -0.30 1.80 add (0,0.1,0.1),(0,0.1,0.1) 
    static 0.00 0.00 add (0,0.1,0) 
    
[gcode_macro TRACKLOAD]
description: Sets the global printer state to preheating
gcode:
  {% set T = params.T|default(0)|int %}
  RESET_LED_EFFECTS
  SET_LED_EFFECT EFFECT=track_load DURATION=3 CYCLE=0.2 T=3
  SET_LED_EFFECT LEDS="neopixel:TradRack ({T})" Effect=mmu_sparkle FADETIME=1

[led_effect mmu_breathing_red]
recalculate: true
leds:
    neopixel:TradRack
layers:       breathing 4 0 top (1,0,0)

[led_effect mmu_white_slow]
leds:
    neopixel:TradRack
layers:       breathing 1.0 0 top (0.8,0.8,0.8)

[led_effect mmu_white_fast]
leds:
    neopixel:TradRack
layers:       breathing 0.6 0 top (0.2,0.2,0.2)

[led_effect mmu_strobe]
leds:
    neopixel:TradRack
layers:       strobe    1 1.5 add (1,1,1)
              breathing 2 0   difference (0.95,0,0)
              static    0 0   top (1,0,0)

[led_effect mmu_green]
leds:
    neopixel:TradRack
layers:       static 0 0 top (0,0.5,0)

[led_effect mmu_orange]
leds:
    neopixel:TradRack
layers:       static 0 0 top (0.5,0.2,0)

[led_effect mmu_curtain]
leds:
    neopixel:TradRack
layers:       comet -1.5 1.0 add (0.4,0.4,0.4), (0,0,1)
              comet  1.5 1.0 top (0.4,0.4,0.4), (1,0,0)

[led_effect mmu_sparkle]
leds:
    neopixel:TradRack
layers:       twinkle 8 0.15 top (0.3,0.3,0.3), (0.4,0,0.25)

[led_effect mmu_rainbow]
leds:
    neopixel:TradRack
layers:       gradient  0.8  0.5 add (0.3, 0.0, 0.0), (0.0, 0.3, 0.0), (0.0, 0.0, 0.3)

[gcode_macro led_status_land_current]
description: "Đặt màu sắc cho LED"
gcode:
    {% set led_t = printer.save_variables.variables['tr_active_lane'] %}

    {% if led_t is none %}
        SET_LED_EFFECT EFFECT=mmu_orange
    {% else %}
        {% for i in range(1, 7) %}
            {% if i == led_t + 1 %}
                SET_LED LED=TradRack INDEX={i} RED=0.6 GREEN=0.6 BLUE=0.6  # LED T màu trắng
            {% else %}
                SET_LED LED=TradRack INDEX={i} RED=0 GREEN=0.2 BLUE=0      # LED khác màu xanh
            {% endif %}
        {% endfor %}
    {% endif %}
    





